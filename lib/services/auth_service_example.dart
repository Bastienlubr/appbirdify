import 'auth_service.dart';

/// Exemple d'utilisation du AuthService
class AuthServiceExample {
  
  /// Exemple : V√©rifier l'√©tat de connexion
  static void checkAuthState() {
    // üîç V√©rification de l'√©tat d'authentification...
    
    // Exemple d'utilisation des propri√©t√©s AuthService
    // final isLoggedIn = AuthService.isUserLoggedIn;
    // final currentUser = AuthService.currentUser;
    // final userId = AuthService.currentUserId;
    // final email = AuthService.currentUserEmail;
    
    // ‚úÖ Utilisateur connect√©: $isLoggedIn
    // üë§ Utilisateur actuel: ${currentUser?.uid ?? 'Aucun'}
    // üÜî ID utilisateur: ${userId ?? 'Aucun'}
    // üìß Email: ${email ?? 'Aucun'}
  }
  
  /// Exemple : Afficher les informations du profil
  static void displayUserProfile() {
    // üë§ Affichage du profil utilisateur...
    
    final profile = AuthService.userProfile;
    
    if (profile != null) {
      // ‚úÖ Profil trouv√©:
      profile.forEach((key, value) {
        //   $key: $value
      });
    } else {
      // ‚ùå Aucun profil utilisateur trouv√©
    }
  }
  
  /// Exemple : V√©rifier les propri√©t√©s de l'utilisateur
  static void checkUserProperties() {
    // üîç V√©rification des propri√©t√©s utilisateur...
    
    // Exemple d'utilisation des propri√©t√©s AuthService
    // final isAnonymous = AuthService.isAnonymous;
    // final isEmailVerified = AuthService.isEmailVerified;
    // final isNewUser = AuthService.isNewUser;
    // final timeSinceLastSignIn = AuthService.timeSinceLastSignIn;
    
    // üëª Utilisateur anonyme: $isAnonymous
    // ‚úÖ Email v√©rifi√©: $isEmailVerified
    // üÜï Nouvel utilisateur: $isNewUser
    
    // if (timeSinceLastSignIn != null) {
    //   final hours = timeSinceLastSignIn.inHours;
    //   final minutes = timeSinceLastSignIn.inMinutes % 60;
    //   // ‚è∞ Derni√®re connexion: il y a ${hours}h ${minutes}min
    // } else {
    //   // ‚è∞ Derni√®re connexion: inconnue
    // }
  }
  
  /// Exemple : √âcouter les changements d'√©tat d'authentification
  static void listenToAuthChanges() {
    // Note: Cette m√©thode est comment√©e pour √©viter les appels print() dans les exemples
    // Dans un vrai usage, vous pourriez utiliser debugPrint() ou un logger
    
    // final subscription = AuthService.listenToAuthChanges().listen(
    //   (user) {
    //     if (user != null) {
    //       // Utilisateur connect√©: ${user.email}
    //     } else {
    //       // Utilisateur d√©connect√©
    //     }
    //   },
    //   onError: (error) {
    //     // Erreur lors de l'√©coute: $error
    //   },
    // );
    
    // Note: Dans un vrai usage, il faudrait g√©rer la d√©sinscription
    // subscription.cancel();
  }
  
  /// Exemple : Utilisation compl√®te
  static void runCompleteExample() {
    // üöÄ D√©marrage de l'exemple complet du AuthService
    
    // 1. V√©rifier l'√©tat de connexion
    checkAuthState();
    
    // ==================================================
    
    // 2. Afficher le profil utilisateur
    displayUserProfile();
    
    // ==================================================
    
    // 3. V√©rifier les propri√©t√©s
    checkUserProperties();
    
    // ==================================================
    
    // 4. D√©marrer l'√©coute (comment√© pour √©viter les blocages)
    // listenToAuthChanges();
    
    // ‚úÖ Exemple termin√© !
  }
} 